<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/context
    		http://www.springframework.org/schema/context/spring-context-3.2.xsd"
    		default-autowire="no"
    		>
    <!-- base -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location" value="classpath:datasource.properties"></property>
    </bean>
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="driverClassName" value="${driver}" />
    	<property name="url" value="${url}" />
    	<property name="username" value="${username}" />
    	<property name="password" value="${password}" />
    </bean> -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
    	<property name="jndiName" value="java:comp/env/jdbc/smbms" />
    </bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<!-- <property name="mapperLocations" value="com/tcf/entity/SmbmsUser.xml" /> -->
		<!-- <property name="mapperLocations"  >
			<list>
				<value>com/tcf/entity/SmbmsUser.xml</value>
			</list>
		</property> -->
		<property name="mapperLocations" value="classpath*:com/tcf/entity/*.xml" />
	</bean>
	<!-- dao -->
	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean id="smbmsUserDaoImpl" class="com.tcf.dao.impl.SmbmsUserDaoImpl">
		<property name="temp" ref="sqlSessionTemplate" />
	</bean> -->
	<!-- <bean id="smbmsUserDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.tcf.dao.SmbmsUserDao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tcf.dao" />
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- service -->
	<bean id="smbmsUserServiceImpl" class="com.tcf.service.impl.SmbmsUserServiceImpl" autowire="byType">
		<!-- <property name="smbmsUserDao" ref="smbmsUserDao"></property> -->
	</bean>
	<!-- 开启注解 -->
	<context:component-scan base-package="com.tcf.service" />
	
	<!-- 事务 -->
	<bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <tx:advice id="txAdvice" transaction-manager="tx">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="search*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="login*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="change*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.tcf.service.impl.*.*(..))" id="servicePoint"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePoint"/>
	</aop:config> -->
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="tx" />
</beans>